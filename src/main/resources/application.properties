spring.datasource.url=jdbc:postgresql://localhost:5432/messengerapp
spring.datasource.username=postgres
spring.datasource.password=123456789

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update
spring.jpa.show-sql=true

spring.security.oauth2.client.registration.google.client-id=<your client id>
spring.security.oauth2.client.registration.google.client-secret=<your client secret>

spring.security.oauth2.client.registration.github.client-id=0f7dab824db81c025b6c
spring.security.oauth2.client.registration.github.client-secret=


jwt.secret=588506d0c604d8270ac4de9fdc520abe4779128ff5b7940d38fcd13d5e5fd07

# The format used for the keystore. It could be set to JKS in case it is a JKS file
# server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
# server.ssl.key-store=classpath:keystore/kiraz.p12
# The password used to generate the certificate
# server.ssl.key-store-password=giresun28
# The alias mapped to the certificate
# server.ssl.key-alias=kiraz

# server.ssl.enabled=true